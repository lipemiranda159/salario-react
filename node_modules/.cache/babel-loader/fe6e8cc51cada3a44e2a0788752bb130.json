{"ast":null,"code":"import inssTable from \"./model/inssTable\";\n\nclass SalaryService {\n  static round(value) {\n    return +value.toFixed(2);\n  }\n\n  static calculateDiscountINSS(baseINSS) {\n    let discountINSS = 0;\n\n    if (baseINSS > 6101.07) {\n      return 713.1;\n    }\n\n    for (var i = 0; i < inssTable.values.length; i++) {\n      var currentItem = inssTable.values[i];\n      let discountValue = 0;\n\n      if (baseINSS > currentItem.maxValue) {\n        // prettier-ignore\n        discountValue = SalaryService.round(currentItem.difference * currentItem.discountPercentage);\n        discountINSS += discountValue;\n      } else {\n        // prettier-ignore\n        discountValue = SalaryService.round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\n        discountINSS += discountValue;\n        break;\n      }\n    }\n\n    discountINSS = SalaryService.round(discountINSS);\n    return discountINSS;\n  }\n\n  static calculateDiscountIRPF(baseIRPF) {\n    let discountIRPF = baseIRPF < 1903.98 ? 0 : baseIRPF < 2826.65 ? SalaryService.round(baseIRPF * 0.075) - 142.8 : baseIRPF < 3751.05 ? SalaryService.round(baseIRPF * 0.15) - 354.8 : baseIRPF < 4664.68 ? SalaryService.round(baseIRPF * 0.225) - 636.13 : SalaryService.round(baseIRPF * 0.275) - 869.36;\n    discountIRPF = SalaryService.round(discountIRPF);\n    return discountIRPF;\n  }\n\n  static calcSalary(fullSalary) {\n    const baseINSS = fullSalary;\n    const discountINSS = SalaryService.calculateDiscountINSS(baseINSS);\n    const baseIRPF = baseINSS - discountINSS;\n    const discountIRPF = SalaryService.calculateDiscountIRPF(baseIRPF);\n    const netSalary = baseINSS - discountINSS - discountIRPF;\n    const formater = Intl.NumberFormat(\"pt-br\");\n    return;\n    formater.format(baseINSS), formater.format(baseIRPF), formater.format(discountINSS), formater.format(discountIRPF), formater.format(netSalary);\n  }\n\n}\n\nexport { SalaryService };","map":{"version":3,"sources":["/home/felipe/Pessoais/Bootcamp/FrontEnd/Trabalho1/trabalho1/src/services/salaryService.ts"],"names":["inssTable","SalaryService","round","value","toFixed","calculateDiscountINSS","baseINSS","discountINSS","i","values","length","currentItem","discountValue","maxValue","difference","discountPercentage","minValue","calculateDiscountIRPF","baseIRPF","discountIRPF","calcSalary","fullSalary","netSalary","formater","Intl","NumberFormat","format"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mBAAtB;;AAEA,MAAMC,aAAN,CAAoB;AAClB,SAAeC,KAAf,CAAqBC,KAArB,EAAoC;AAClC,WAAO,CAACA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAR;AACD;;AAED,SAAeC,qBAAf,CAAqCC,QAArC,EAAuD;AACrD,QAAIC,YAAY,GAAG,CAAnB;;AAEA,QAAID,QAAQ,GAAG,OAAf,EAAwB;AACtB,aAAO,KAAP;AACD;;AAED,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,MAAV,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAChD,UAAIG,WAAW,GAAGX,SAAS,CAACS,MAAV,CAAiBD,CAAjB,CAAlB;AACA,UAAII,aAAa,GAAG,CAApB;;AAEA,UAAIN,QAAQ,GAAGK,WAAW,CAACE,QAA3B,EAAqC;AACnC;AACAD,QAAAA,aAAa,GACXX,aAAa,CAACC,KAAd,CAAoBS,WAAW,CAACG,UAAZ,GAAyBH,WAAW,CAACI,kBAAzD,CADF;AAGAR,QAAAA,YAAY,IAAIK,aAAhB;AACD,OAND,MAMO;AACL;AACAA,QAAAA,aAAa,GACXX,aAAa,CAACC,KAAd,CAAoB,CAACI,QAAQ,GAAGK,WAAW,CAACK,QAAxB,IAAoCL,WAAW,CAACI,kBAApE,CADF;AAGAR,QAAAA,YAAY,IAAIK,aAAhB;AACA;AACD;AACF;;AAEDL,IAAAA,YAAY,GAAGN,aAAa,CAACC,KAAd,CAAoBK,YAApB,CAAf;AAEA,WAAOA,YAAP;AACD;;AAED,SAAeU,qBAAf,CAAqCC,QAArC,EAAuD;AACrD,QAAIC,YAAY,GACdD,QAAQ,GAAG,OAAX,GACI,CADJ,GAEIA,QAAQ,GAAG,OAAX,GACAjB,aAAa,CAACC,KAAd,CAAoBgB,QAAQ,GAAG,KAA/B,IAAwC,KADxC,GAEAA,QAAQ,GAAG,OAAX,GACAjB,aAAa,CAACC,KAAd,CAAoBgB,QAAQ,GAAG,IAA/B,IAAuC,KADvC,GAEAA,QAAQ,GAAG,OAAX,GACAjB,aAAa,CAACC,KAAd,CAAoBgB,QAAQ,GAAG,KAA/B,IAAwC,MADxC,GAEAjB,aAAa,CAACC,KAAd,CAAoBgB,QAAQ,GAAG,KAA/B,IAAwC,MAT9C;AAWAC,IAAAA,YAAY,GAAGlB,aAAa,CAACC,KAAd,CAAoBiB,YAApB,CAAf;AAEA,WAAOA,YAAP;AACD;;AAED,SAAcC,UAAd,CAAyBC,UAAzB,EAA6C;AAC3C,UAAMf,QAAQ,GAAGe,UAAjB;AACA,UAAMd,YAAY,GAAGN,aAAa,CAACI,qBAAd,CAAoCC,QAApC,CAArB;AAEA,UAAMY,QAAQ,GAAGZ,QAAQ,GAAGC,YAA5B;AACA,UAAMY,YAAY,GAAGlB,aAAa,CAACgB,qBAAd,CAAoCC,QAApC,CAArB;AAEA,UAAMI,SAAS,GAAGhB,QAAQ,GAAGC,YAAX,GAA0BY,YAA5C;AAEA,UAAMI,QAAQ,GAAGC,IAAI,CAACC,YAAL,CAAkB,OAAlB,CAAjB;AAEA;AACAF,IAAAA,QAAQ,CAACG,MAAT,CAAgBpB,QAAhB,GACEiB,QAAQ,CAACG,MAAT,CAAgBR,QAAhB,CADF,EAEEK,QAAQ,CAACG,MAAT,CAAgBnB,YAAhB,CAFF,EAGEgB,QAAQ,CAACG,MAAT,CAAgBP,YAAhB,CAHF,EAIEI,QAAQ,CAACG,MAAT,CAAgBJ,SAAhB,CAJF;AAKD;;AAvEiB;;AAyEpB,SAASrB,aAAT","sourcesContent":["import inssTable from \"./model/inssTable\";\n\nclass SalaryService {\n  private static round(value: number) {\n    return +value.toFixed(2);\n  }\n\n  private static calculateDiscountINSS(baseINSS: number) {\n    let discountINSS = 0;\n\n    if (baseINSS > 6101.07) {\n      return 713.1;\n    }\n\n    for (var i = 0; i < inssTable.values.length; i++) {\n      var currentItem = inssTable.values[i];\n      let discountValue = 0;\n\n      if (baseINSS > currentItem.maxValue) {\n        // prettier-ignore\n        discountValue = \n          SalaryService.round(currentItem.difference * currentItem.discountPercentage);\n\n        discountINSS += discountValue;\n      } else {\n        // prettier-ignore\n        discountValue = \n          SalaryService.round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\n\n        discountINSS += discountValue;\n        break;\n      }\n    }\n\n    discountINSS = SalaryService.round(discountINSS);\n\n    return discountINSS;\n  }\n\n  private static calculateDiscountIRPF(baseIRPF: number) {\n    let discountIRPF =\n      baseIRPF < 1903.98\n        ? 0\n        : baseIRPF < 2826.65\n        ? SalaryService.round(baseIRPF * 0.075) - 142.8\n        : baseIRPF < 3751.05\n        ? SalaryService.round(baseIRPF * 0.15) - 354.8\n        : baseIRPF < 4664.68\n        ? SalaryService.round(baseIRPF * 0.225) - 636.13\n        : SalaryService.round(baseIRPF * 0.275) - 869.36;\n\n    discountIRPF = SalaryService.round(discountIRPF);\n\n    return discountIRPF;\n  }\n\n  public static calcSalary(fullSalary: number) {\n    const baseINSS = fullSalary;\n    const discountINSS = SalaryService.calculateDiscountINSS(baseINSS);\n\n    const baseIRPF = baseINSS - discountINSS;\n    const discountIRPF = SalaryService.calculateDiscountIRPF(baseIRPF);\n\n    const netSalary = baseINSS - discountINSS - discountIRPF;\n\n    const formater = Intl.NumberFormat(\"pt-br\");\n\n    return;\n    formater.format(baseINSS),\n      formater.format(baseIRPF),\n      formater.format(discountINSS),\n      formater.format(discountIRPF),\n      formater.format(netSalary);\n  }\n}\nexport { SalaryService };\n"]},"metadata":{},"sourceType":"module"}